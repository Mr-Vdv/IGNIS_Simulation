// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: matrix3d.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "matrix3d.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gz_std_msgs {

namespace {

const ::google::protobuf::Descriptor* Matrix3d_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Matrix3d_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_matrix3d_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_matrix3d_2eproto() {
  protobuf_AddDesc_matrix3d_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "matrix3d.proto");
  GOOGLE_CHECK(file != NULL);
  Matrix3d_descriptor_ = file->message_type(0);
  static const int Matrix3d_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix3d, xx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix3d, yx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix3d, zx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix3d, xy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix3d, yy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix3d, zy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix3d, xz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix3d, yz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix3d, zz_),
  };
  Matrix3d_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Matrix3d_descriptor_,
      Matrix3d::default_instance_,
      Matrix3d_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix3d, _has_bits_[0]),
      -1,
      -1,
      sizeof(Matrix3d),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Matrix3d, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_matrix3d_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Matrix3d_descriptor_, &Matrix3d::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_matrix3d_2eproto() {
  delete Matrix3d::default_instance_;
  delete Matrix3d_reflection_;
}

void protobuf_AddDesc_matrix3d_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_matrix3d_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016matrix3d.proto\022\013gz_std_msgs\"v\n\010Matrix3"
    "d\022\n\n\002xx\030\001 \002(\001\022\n\n\002yx\030\002 \002(\001\022\n\n\002zx\030\003 \002(\001\022\n\n"
    "\002xy\030\004 \002(\001\022\n\n\002yy\030\005 \002(\001\022\n\n\002zy\030\006 \002(\001\022\n\n\002xz\030"
    "\007 \002(\001\022\n\n\002yz\030\010 \002(\001\022\n\n\002zz\030\t \002(\001", 149);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "matrix3d.proto", &protobuf_RegisterTypes);
  Matrix3d::default_instance_ = new Matrix3d();
  Matrix3d::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_matrix3d_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_matrix3d_2eproto {
  StaticDescriptorInitializer_matrix3d_2eproto() {
    protobuf_AddDesc_matrix3d_2eproto();
  }
} static_descriptor_initializer_matrix3d_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Matrix3d::kXxFieldNumber;
const int Matrix3d::kYxFieldNumber;
const int Matrix3d::kZxFieldNumber;
const int Matrix3d::kXyFieldNumber;
const int Matrix3d::kYyFieldNumber;
const int Matrix3d::kZyFieldNumber;
const int Matrix3d::kXzFieldNumber;
const int Matrix3d::kYzFieldNumber;
const int Matrix3d::kZzFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Matrix3d::Matrix3d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz_std_msgs.Matrix3d)
}

void Matrix3d::InitAsDefaultInstance() {
}

Matrix3d::Matrix3d(const Matrix3d& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gz_std_msgs.Matrix3d)
}

void Matrix3d::SharedCtor() {
  _cached_size_ = 0;
  xx_ = 0;
  yx_ = 0;
  zx_ = 0;
  xy_ = 0;
  yy_ = 0;
  zy_ = 0;
  xz_ = 0;
  yz_ = 0;
  zz_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Matrix3d::~Matrix3d() {
  // @@protoc_insertion_point(destructor:gz_std_msgs.Matrix3d)
  SharedDtor();
}

void Matrix3d::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Matrix3d::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Matrix3d::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Matrix3d_descriptor_;
}

const Matrix3d& Matrix3d::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_matrix3d_2eproto();
  return *default_instance_;
}

Matrix3d* Matrix3d::default_instance_ = NULL;

Matrix3d* Matrix3d::New(::google::protobuf::Arena* arena) const {
  Matrix3d* n = new Matrix3d;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Matrix3d::Clear() {
// @@protoc_insertion_point(message_clear_start:gz_std_msgs.Matrix3d)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Matrix3d, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Matrix3d*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(xx_, yz_);
  }
  zz_ = 0;

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Matrix3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz_std_msgs.Matrix3d)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double xx = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xx_)));
          set_has_xx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_yx;
        break;
      }

      // required double yx = 2;
      case 2: {
        if (tag == 17) {
         parse_yx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yx_)));
          set_has_yx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_zx;
        break;
      }

      // required double zx = 3;
      case 3: {
        if (tag == 25) {
         parse_zx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &zx_)));
          set_has_zx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_xy;
        break;
      }

      // required double xy = 4;
      case 4: {
        if (tag == 33) {
         parse_xy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xy_)));
          set_has_xy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_yy;
        break;
      }

      // required double yy = 5;
      case 5: {
        if (tag == 41) {
         parse_yy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yy_)));
          set_has_yy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_zy;
        break;
      }

      // required double zy = 6;
      case 6: {
        if (tag == 49) {
         parse_zy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &zy_)));
          set_has_zy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_xz;
        break;
      }

      // required double xz = 7;
      case 7: {
        if (tag == 57) {
         parse_xz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xz_)));
          set_has_xz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_yz;
        break;
      }

      // required double yz = 8;
      case 8: {
        if (tag == 65) {
         parse_yz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yz_)));
          set_has_yz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_zz;
        break;
      }

      // required double zz = 9;
      case 9: {
        if (tag == 73) {
         parse_zz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &zz_)));
          set_has_zz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz_std_msgs.Matrix3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz_std_msgs.Matrix3d)
  return false;
#undef DO_
}

void Matrix3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz_std_msgs.Matrix3d)
  // required double xx = 1;
  if (has_xx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->xx(), output);
  }

  // required double yx = 2;
  if (has_yx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->yx(), output);
  }

  // required double zx = 3;
  if (has_zx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->zx(), output);
  }

  // required double xy = 4;
  if (has_xy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->xy(), output);
  }

  // required double yy = 5;
  if (has_yy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->yy(), output);
  }

  // required double zy = 6;
  if (has_zy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->zy(), output);
  }

  // required double xz = 7;
  if (has_xz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->xz(), output);
  }

  // required double yz = 8;
  if (has_yz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->yz(), output);
  }

  // required double zz = 9;
  if (has_zz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->zz(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gz_std_msgs.Matrix3d)
}

::google::protobuf::uint8* Matrix3d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gz_std_msgs.Matrix3d)
  // required double xx = 1;
  if (has_xx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->xx(), target);
  }

  // required double yx = 2;
  if (has_yx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->yx(), target);
  }

  // required double zx = 3;
  if (has_zx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->zx(), target);
  }

  // required double xy = 4;
  if (has_xy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->xy(), target);
  }

  // required double yy = 5;
  if (has_yy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->yy(), target);
  }

  // required double zy = 6;
  if (has_zy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->zy(), target);
  }

  // required double xz = 7;
  if (has_xz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->xz(), target);
  }

  // required double yz = 8;
  if (has_yz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->yz(), target);
  }

  // required double zz = 9;
  if (has_zz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->zz(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz_std_msgs.Matrix3d)
  return target;
}

int Matrix3d::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:gz_std_msgs.Matrix3d)
  int total_size = 0;

  if (has_xx()) {
    // required double xx = 1;
    total_size += 1 + 8;
  }

  if (has_yx()) {
    // required double yx = 2;
    total_size += 1 + 8;
  }

  if (has_zx()) {
    // required double zx = 3;
    total_size += 1 + 8;
  }

  if (has_xy()) {
    // required double xy = 4;
    total_size += 1 + 8;
  }

  if (has_yy()) {
    // required double yy = 5;
    total_size += 1 + 8;
  }

  if (has_zy()) {
    // required double zy = 6;
    total_size += 1 + 8;
  }

  if (has_xz()) {
    // required double xz = 7;
    total_size += 1 + 8;
  }

  if (has_yz()) {
    // required double yz = 8;
    total_size += 1 + 8;
  }

  if (has_zz()) {
    // required double zz = 9;
    total_size += 1 + 8;
  }

  return total_size;
}
int Matrix3d::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gz_std_msgs.Matrix3d)
  int total_size = 0;

  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required double xx = 1;
    total_size += 1 + 8;

    // required double yx = 2;
    total_size += 1 + 8;

    // required double zx = 3;
    total_size += 1 + 8;

    // required double xy = 4;
    total_size += 1 + 8;

    // required double yy = 5;
    total_size += 1 + 8;

    // required double zy = 6;
    total_size += 1 + 8;

    // required double xz = 7;
    total_size += 1 + 8;

    // required double yz = 8;
    total_size += 1 + 8;

    // required double zz = 9;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Matrix3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz_std_msgs.Matrix3d)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Matrix3d* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Matrix3d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz_std_msgs.Matrix3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz_std_msgs.Matrix3d)
    MergeFrom(*source);
  }
}

void Matrix3d::MergeFrom(const Matrix3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz_std_msgs.Matrix3d)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_xx()) {
      set_xx(from.xx());
    }
    if (from.has_yx()) {
      set_yx(from.yx());
    }
    if (from.has_zx()) {
      set_zx(from.zx());
    }
    if (from.has_xy()) {
      set_xy(from.xy());
    }
    if (from.has_yy()) {
      set_yy(from.yy());
    }
    if (from.has_zy()) {
      set_zy(from.zy());
    }
    if (from.has_xz()) {
      set_xz(from.xz());
    }
    if (from.has_yz()) {
      set_yz(from.yz());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_zz()) {
      set_zz(from.zz());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Matrix3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz_std_msgs.Matrix3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Matrix3d::CopyFrom(const Matrix3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz_std_msgs.Matrix3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Matrix3d::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void Matrix3d::Swap(Matrix3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Matrix3d::InternalSwap(Matrix3d* other) {
  std::swap(xx_, other->xx_);
  std::swap(yx_, other->yx_);
  std::swap(zx_, other->zx_);
  std::swap(xy_, other->xy_);
  std::swap(yy_, other->yy_);
  std::swap(zy_, other->zy_);
  std::swap(xz_, other->xz_);
  std::swap(yz_, other->yz_);
  std::swap(zz_, other->zz_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Matrix3d::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Matrix3d_descriptor_;
  metadata.reflection = Matrix3d_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Matrix3d

// required double xx = 1;
bool Matrix3d::has_xx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Matrix3d::set_has_xx() {
  _has_bits_[0] |= 0x00000001u;
}
void Matrix3d::clear_has_xx() {
  _has_bits_[0] &= ~0x00000001u;
}
void Matrix3d::clear_xx() {
  xx_ = 0;
  clear_has_xx();
}
 double Matrix3d::xx() const {
  // @@protoc_insertion_point(field_get:gz_std_msgs.Matrix3d.xx)
  return xx_;
}
 void Matrix3d::set_xx(double value) {
  set_has_xx();
  xx_ = value;
  // @@protoc_insertion_point(field_set:gz_std_msgs.Matrix3d.xx)
}

// required double yx = 2;
bool Matrix3d::has_yx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Matrix3d::set_has_yx() {
  _has_bits_[0] |= 0x00000002u;
}
void Matrix3d::clear_has_yx() {
  _has_bits_[0] &= ~0x00000002u;
}
void Matrix3d::clear_yx() {
  yx_ = 0;
  clear_has_yx();
}
 double Matrix3d::yx() const {
  // @@protoc_insertion_point(field_get:gz_std_msgs.Matrix3d.yx)
  return yx_;
}
 void Matrix3d::set_yx(double value) {
  set_has_yx();
  yx_ = value;
  // @@protoc_insertion_point(field_set:gz_std_msgs.Matrix3d.yx)
}

// required double zx = 3;
bool Matrix3d::has_zx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Matrix3d::set_has_zx() {
  _has_bits_[0] |= 0x00000004u;
}
void Matrix3d::clear_has_zx() {
  _has_bits_[0] &= ~0x00000004u;
}
void Matrix3d::clear_zx() {
  zx_ = 0;
  clear_has_zx();
}
 double Matrix3d::zx() const {
  // @@protoc_insertion_point(field_get:gz_std_msgs.Matrix3d.zx)
  return zx_;
}
 void Matrix3d::set_zx(double value) {
  set_has_zx();
  zx_ = value;
  // @@protoc_insertion_point(field_set:gz_std_msgs.Matrix3d.zx)
}

// required double xy = 4;
bool Matrix3d::has_xy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Matrix3d::set_has_xy() {
  _has_bits_[0] |= 0x00000008u;
}
void Matrix3d::clear_has_xy() {
  _has_bits_[0] &= ~0x00000008u;
}
void Matrix3d::clear_xy() {
  xy_ = 0;
  clear_has_xy();
}
 double Matrix3d::xy() const {
  // @@protoc_insertion_point(field_get:gz_std_msgs.Matrix3d.xy)
  return xy_;
}
 void Matrix3d::set_xy(double value) {
  set_has_xy();
  xy_ = value;
  // @@protoc_insertion_point(field_set:gz_std_msgs.Matrix3d.xy)
}

// required double yy = 5;
bool Matrix3d::has_yy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Matrix3d::set_has_yy() {
  _has_bits_[0] |= 0x00000010u;
}
void Matrix3d::clear_has_yy() {
  _has_bits_[0] &= ~0x00000010u;
}
void Matrix3d::clear_yy() {
  yy_ = 0;
  clear_has_yy();
}
 double Matrix3d::yy() const {
  // @@protoc_insertion_point(field_get:gz_std_msgs.Matrix3d.yy)
  return yy_;
}
 void Matrix3d::set_yy(double value) {
  set_has_yy();
  yy_ = value;
  // @@protoc_insertion_point(field_set:gz_std_msgs.Matrix3d.yy)
}

// required double zy = 6;
bool Matrix3d::has_zy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Matrix3d::set_has_zy() {
  _has_bits_[0] |= 0x00000020u;
}
void Matrix3d::clear_has_zy() {
  _has_bits_[0] &= ~0x00000020u;
}
void Matrix3d::clear_zy() {
  zy_ = 0;
  clear_has_zy();
}
 double Matrix3d::zy() const {
  // @@protoc_insertion_point(field_get:gz_std_msgs.Matrix3d.zy)
  return zy_;
}
 void Matrix3d::set_zy(double value) {
  set_has_zy();
  zy_ = value;
  // @@protoc_insertion_point(field_set:gz_std_msgs.Matrix3d.zy)
}

// required double xz = 7;
bool Matrix3d::has_xz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Matrix3d::set_has_xz() {
  _has_bits_[0] |= 0x00000040u;
}
void Matrix3d::clear_has_xz() {
  _has_bits_[0] &= ~0x00000040u;
}
void Matrix3d::clear_xz() {
  xz_ = 0;
  clear_has_xz();
}
 double Matrix3d::xz() const {
  // @@protoc_insertion_point(field_get:gz_std_msgs.Matrix3d.xz)
  return xz_;
}
 void Matrix3d::set_xz(double value) {
  set_has_xz();
  xz_ = value;
  // @@protoc_insertion_point(field_set:gz_std_msgs.Matrix3d.xz)
}

// required double yz = 8;
bool Matrix3d::has_yz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Matrix3d::set_has_yz() {
  _has_bits_[0] |= 0x00000080u;
}
void Matrix3d::clear_has_yz() {
  _has_bits_[0] &= ~0x00000080u;
}
void Matrix3d::clear_yz() {
  yz_ = 0;
  clear_has_yz();
}
 double Matrix3d::yz() const {
  // @@protoc_insertion_point(field_get:gz_std_msgs.Matrix3d.yz)
  return yz_;
}
 void Matrix3d::set_yz(double value) {
  set_has_yz();
  yz_ = value;
  // @@protoc_insertion_point(field_set:gz_std_msgs.Matrix3d.yz)
}

// required double zz = 9;
bool Matrix3d::has_zz() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Matrix3d::set_has_zz() {
  _has_bits_[0] |= 0x00000100u;
}
void Matrix3d::clear_has_zz() {
  _has_bits_[0] &= ~0x00000100u;
}
void Matrix3d::clear_zz() {
  zz_ = 0;
  clear_has_zz();
}
 double Matrix3d::zz() const {
  // @@protoc_insertion_point(field_get:gz_std_msgs.Matrix3d.zz)
  return zz_;
}
 void Matrix3d::set_zz(double value) {
  set_has_zz();
  zz_ = value;
  // @@protoc_insertion_point(field_set:gz_std_msgs.Matrix3d.zz)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace gz_std_msgs

// @@protoc_insertion_point(global_scope)
